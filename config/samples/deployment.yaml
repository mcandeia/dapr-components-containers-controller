apiVersion: apps/v1
kind: Deployment
metadata:
  name: app
  labels:
    app: app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
      annotations:
        components.dapr.io/enabled: "true"
        dapr.io/app-id: "my-app"
        dapr.io/enabled: "true"
    spec:
      containers:
        - name: "test"
          image: "kennethreitz/httpbin"
---
apiVersion: v1
kind: Pod
metadata:
  name: redis
  labels:
    app: redis
spec:
  containers:
    - name: redis
      image: redis:5.0.4
      command:
        - redis-server
      env:
        - name: MASTER
          value: "true"
      ports:
        - containerPort: 6379
      resources:
        limits:
          cpu: "0.1"
      volumeMounts:
        - mountPath: /redis-master-data
          name: data
  volumes:
    - name: data
      emptyDir: {}
    - name: config
      configMap:
        name: example-redis-config
        items:
          - key: redis-config
            path: redis.conf

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: redis-svc
  name: redis-svc
spec:
  ports:
    - name: redis-server
      port: 6379
      protocol: TCP
      targetPort: 6379
  selector:
    app: redis
  type: ClusterIP
---
apiVersion: dapr.io/v1alpha1
kind: Component
metadata:
  name: redis-pluggable
  annotations:
    components.dapr.io/container-image: "localhost:5001/state-redis:latest"
spec:
  type: state.redis-pluggable
  initTimeout: 1m
  version: v1
  metadata:
    - name: redisHost
      value: redis-svc.default.svc.cluster.local:6379
    - name: redisPassword
      value: ""
---
apiVersion: dapr.io/v1alpha1
kind: Component
metadata:
  name: memory-pluggable
  annotations:
    components.dapr.io/container-image: "localhost:5001/state-memory:latest"
spec:
  type: state.memory-pluggable
  initTimeout: 1m
  version: v1
  metadata: []
